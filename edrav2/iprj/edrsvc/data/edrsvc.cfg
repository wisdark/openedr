{
	///////////////////////////////////////////////////////////////////////////////////////
	//
	// Base settings for all working modes
	//
	///////////////////////////////////////////////////////////////////////////////////////
	"common": {
		"isService": false,
		"serviceStartMode": { // default startup mode for service
			"$$proxy": "cachedCmd",
			"processor": "objects.application",
			"command": "getConfigValue",
			"params": {
				"default": "auto",
				"paths": "app.config.extern.debug.serviceStartMode"
			}
		},

		//
		// Path to the data directory
		//
		"dataPath": {
			"$$proxy": "cachedCmd",
			"processor": "objects.application",
			"command": "getConfigValue",
			"params": {
				"default": "",
				"paths": [
					"app.config.extern.debug.dataPath",
					"app.defaultDataPath"
				]
			}
		},

		//
		// Self-checking settings
		//
		"selfcheck": {
			"enable": true,
			"configs": [
				{
					"name": "endpoint.cfg",
					"required": false,
					"allowEmpty": true,
					"default": {},
					"action": "create", // Supported values: "exit", "delete", "create"
					"fields": [],
					"path": {
						"$$proxy": "cachedCmd",
						"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
						"command": "add",
						"params": {
							"args": [
								{ "$gpath": "app.dataPath" },
								"\\endpoint.cfg"
							]
						}
					}
				},
				{
					"name": "evm.cloud.src",
					"required": true,
					"allowEmpty": false,
					"default": {},
					"action": "delete", // Supported values: "exit", "delete", "create"
					"fields": [ "Events" ],
					"path": {
						"$$proxy": "cachedCmd",
						"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
						"command": "add",
						"params": {
							"args": [
								{ "$gpath": "app.dataPath" },
								"\\evm.cloud.src"
							]
						}
					}
				},
				{
					"name": "queuemgr.dat",
					"required": false,
					"allowEmpty": true,
					"default": {},
					"action": "delete",
					"fields": [],
					"path": {
						"$$proxy": "cachedCmd",
						"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
						"command": "add",
						"params": {
							"args": [
								{ "$gpath": "app.dataPath" },
								"\\queuemgr.dat"
							]
						}
					}
				},
				{
					"name": "valkyriesvc.dat",
					"required": false,
					"allowEmpty": true,
					"default": {},
					"action": "delete",
					"fields": [],
					"path": {
						"$$proxy": "cachedCmd",
						"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
						"command": "add",
						"params": {
							"args": [
								{ "$gpath": "app.dataPath" },
								"\\valkyriesvc.dat"
							]
						}
					}
				},
				{
					"name": "flssvc.dat",
					"required": false,
					"allowEmpty": true,
					"default": {},
					"action": "delete",
					"fields": [],
					"path": {
						"$$proxy": "cachedCmd",
						"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
						"command": "add",
						"params": {
							"args": [
								{ "$gpath": "app.dataPath" },
								"\\flssvc.dat"
							]
						}
					}
				},
				{
					"name": "signsvc.dat",
					"required": false,
					"allowEmpty": true,
					"default": {},
					"action": "delete",
					"fields": [],
					"path": {
						"$$proxy": "cachedCmd",
						"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
						"command": "add",
						"params": {
							"args": [
								{ "$gpath": "app.dataPath" },
								"\\signsvc.dat"
							]
						}
					}
				}
			]
		},

		//
		// Load TLS CA certificates bundle
		//
		"caCertificates": {
			"$$proxy": "cachedCmd",
			"processor": "objects.application",
			"command": "loadStreamAsString",
			"params": {
				"default": "",
				"stream": {
					"$$proxy": "cachedObj",
					"clsid": "0xCEFC4454", // CLSID_File
					"mode": "r",
					"path": {
						"$$proxy": "cachedCmd",
						"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
						"command": "add",
						"params": {
							"args": [
								{ "$gpath": "app.imagePath" },
								"\\cacert.pem"
							]
						}
					}
				}
			}
		},

		//
		// License settings
		//
		"license": {
			"token": {
				"$$proxy": "cmd",
				"processor": "objects.application",
				"command": "getConfigValue",
				"params": {
					"default": "", // "7uYqnSIge", - AWS // "SJnWHk304" - GCP
					"paths": [
						"app.config.extern.debug.license.token",
						"app.config.extern.endpoint.license.token"
					]
				}
			},
			"machineId": {
				"$$proxy": "cmd",
				"processor": "objects.application",
				"command": "getConfigValue",
				"params": {
					"default": null,
					"paths": [
						"app.config.extern.debug.license.machineId",
						"app.config.extern.endpoint.license.machineId",
						"os.machineId"
					]
				}
			},
			"customerId": {
				"$$proxy": "cmd",
				"processor": "objects.application",
				"command": "getConfigValue",
				"params": {
					"default": "",
					"paths": [
						"app.config.extern.debug.license.customerId",
						"app.config.extern.endpoint.license.customerId"
					]
				}
			},
			"clientId": {
				"$$proxy": "cmd",
				"processor": "objects.application",
				"command": "getConfigValue",
				"params": {
					"default": "",
					"paths": [
						"app.config.extern.debug.license.clientId",
						"app.config.extern.endpoint.license.clientId"
					]
				}
			},
			"needUpdate": {
				"$$proxy": "cmd",
				"processor": "objects.application",
				"command": "getConfigValue",
				"params": {
					"default": false,
					"paths": [
						"app.config.extern.endpoint.license.needUpdate"
					]
				}
			},
			"legacyCustomerId": {
				"$$proxy": "cmd",
				"processor": "objects.application",
				"command": "getConfigValue",
				"params": {
					"default": "",
					"paths": [
						"app.config.extern.debug.license.legacyCustomerId",
						"app.config.extern.endpoint.license.legacyCustomerId"
					]
				}
			},
			"endpointId": {
				"$$proxy": "cmd",
				"processor": "objects.application",
				"command": "getConfigValue",
				"params": {
					"default": "",
					"paths": [
						"app.config.extern.debug.license.endpointId",
						"app.config.extern.endpoint.license.endpointId"
					]
				}
			}
		},

		//
		// Cloud settings
		//
		"cloud": {

			"apiKey": "", //FIXME: REMOVED: apikey

			"rootUrl": {
				"$$proxy": "cmd",
				"processor": "objects.application",
				"command": "getConfigValue",
				"params": {
					"default": "https://api.cwatchedr.com/endpoint", // For GCP
					"paths": [
						"app.config.extern.debug.cloud.rootUrl",
						"app.config.extern.endpoint.cloud.rootUrl"
					]
				}
			},

			"rootLegacyUrl": {
				"$$proxy": "cmd",
				"processor": "objects.application",
				"command": "getConfigValue",
				"params": {
					"default": "https://wtfibam2s5.execute-api.us-west-2.amazonaws.com/production/", // For AWS
					"paths": [
						"app.config.extern.debug.cloud.rootLegacyUrl",
						"app.config.extern.endpoint.cloud.rootLegacyUrl"
					]
				}
			},

			"gcp": {
				"pubSubTopic": {
					"$$proxy": "cmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": null,
						"paths": [
							"app.config.extern.debug.cloud.gcp.pubSubTopic",
							"app.config.extern.endpoint.cloud.gcp.pubSubTopic"
						]
					}
				},
				"saCredentials": {
					"$$proxy": "cmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": null,
						"paths": [
							"app.config.extern.debug.cloud.gcp.saCredentials",
							"app.config.extern.endpoint.cloud.gcp.saCredentials"
						]
					}
				},
				"caCertificates": {
					"$$proxy": "cmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": null,
						"paths": [ "app.config.caCertificates" ]
					}
				},
				"enableStatistic": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": false,
						"paths": "app.config.extern.debug.enableGcpStatistic"
					}
				},
				"statFilePath": {
					"$$proxy": "cachedCmd",
					"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
					"command": "add",
					"params": {
						"args": [
							{ "$gpath": "app.dataPath" },
							"\\gcpstat.dat"
						]
					}
				}
			},
			"aws": {
				"accessKey": {
					"$$proxy": "cmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": null,
						"paths": [
							"app.config.extern.debug.cloud.aws.accessKey",
							"app.config.extern.endpoint.cloud.aws.accessKey"
						]
					}
				},
				"secretKey": {
					"$$proxy": "cmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": null,
						"paths": [
							"app.config.extern.debug.cloud.aws.secretKey",
							"app.config.extern.endpoint.cloud.aws.secretKey"
						]
					}
				},
				"deliveryStream": {
					"$$proxy": "cmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": null, // "edr-evt-stream-development-central-v060"
						"paths": [
							"app.config.extern.debug.cloud.aws.deliveryStream",
							"app.config.extern.endpoint.cloud.aws.deliveryStream"
						]
					}
				}
			},
			"fls": {
				"url": {
					"$$proxy": "cmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": "fls.security.comodo.com",
						"paths": [
							"app.config.extern.debug.cloud.fls.url",
							"app.config.extern.endpoint.cloud.fls.url"
						]
					}
				}
			},
			"valkyrie": {
				"apiKey": {
					"$$proxy": "cmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": "75c810a9-1584-4a5b-bcbe-b4deeed521b5", //could be replaced by you own api key
						"paths": [
							"app.config.extern.debug.cloud.valkyrie.apiKey",
							"app.config.extern.endpoint.cloud.valkyrie.apiKey"
						]
					}
				},
				"url": {
					"$$proxy": "cmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": "https://valkyrie.comodo.com", // https://staging.valkyrie.comodo.com
						"paths": [
							"app.config.extern.debug.cloud.valkyrie.url",
							"app.config.extern.endpoint.cloud.valkyrie.url"
						]
					}
				}
			}
		},

		//
		// Logging settings
		//
		"log": {

			// Initial log level (it uses till configuration initialization)
			"logLevel": 2, // LogLevel::Detailed

			"workLogLevel": {
				"$$proxy": "cachedCmd",
				"processor": "objects.application",
				"command": "getConfigValue",
				"params": {
					"default": 2, // All - LogLevel::Detailed
					"paths": [
						"app.config.log.cmdLineLogLevel", // This parameter can be specified by command line
						"app.config.extern.debug.log.logLevel"
					]
				}
			},

			"workComponents": {
				"$$proxy": "cachedCmd",
				"processor": "objects.application",
				"command": "getConfigValue",
				"params": {
					"mergeMode": 3, // All
					"default": {},
					"paths": "app.config.extern.debug.log.components"
				}
			},

			"sink": [ "logfile" ],
			"sinks": {
				"console": {
					"$$proxy": "cachedObj",
					"clsid": "0xE18D3126", // CLSID_Log4CPlusSink
					"factory": "log4cplus::ConsoleAppender",
					"layout": {
						"factory": "log4cplus::PatternLayout",
						"ConversionPattern": "%t [%-8.-8c{1}] %m%n"
					}
				},
				"logfile": {
					"$$proxy": "cachedObj",
					"clsid": "0xE18D3126", // CLSID_Log4CPlusSink
					"factory": "log4cplus::SessionRollingFileAppender",
					"File": "edrsvc-%U-%P.log",
					"FilenamePrefix": "edrsvc",
					"Locale": "en_US.UTF8",
					"CreateDirs": true,
					"MaxSessionCount": 10,
					"MaxFileSize": "25MB",
					"MaxBackupIndex": 1,
					"layout": {
						"factory": "log4cplus::PatternLayout",
						"ConversionPattern": "%D{%Y%m%d-%H%M%S.%q} %t [%-8.-8c{1}] %m%n"
					}
				}
			}
		},

		//
		// Config files global settings
		//
		"serialization": {
			"format": "json",
			"encryption": {
				"$$proxy": "cachedCmd",
				"processor": "objects.application",
				"command": "getConfigValue",
				"params": {
					"default": "aes",
					"paths": "app.config.extern.debug.serialization.encryption"
				}
			},
			"compression": {
				"$$proxy": "cachedCmd",
				"processor": "objects.application",
				"command": "getConfigValue",
				"params": {
					"default": "",
					"paths": "app.config.extern.debug.serialization.compression"
				}
			}
		},

		//
		// Current policy settings
		//
		"policy": {
			"groups": {
				"patternsMatching": {
					"source": {
						"common": {
							"$$proxy": "cachedObj",
							"clsid": "0x54AFB9F0", // CLSID_DictionaryStreamView
							"readOnly": true,
							"stream": {
								"$$proxy": "cachedObj",
								"clsid": "0xCEFC4454", // CLSID_File
								"mode": "rR",
								"path": {
									"$$proxy": "cachedCmd",
									"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
									"command": "add",
									"params": {
										"args": [
											{ "$gpath": "app.imagePath" },
											"\\common.src"
										]
									}
								}
							},
							"default": {}
						},
						"ptmLocal": {
							"$$proxy": "cachedObj",
							"clsid": "0x54AFB9F0", // CLSID_DictionaryStreamView
							"readOnly": true,
							"stream": {
								"$$proxy": "cachedObj",
								"clsid": "0xCEFC4454", // CLSID_File
								"mode": "rR",
								"path": {
									"$$proxy": "cachedCmd",
									"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
									"command": "add",
									"params": {
										"args": [
											{ "$gpath": "app.imagePath" },
											"\\ptm.local.src"
										]
									}
								}
							},
							"default": {}
						},
						"ptmCloud": {
							"$$proxy": "cachedObj",
							"clsid": "0x54AFB9F0", // CLSID_DictionaryStreamView
							"stream": {
								"$$proxy": "cachedObj",
								"clsid": "0xCEFC4454", // CLSID_File
								"mode": "rwR",
								"path": {
									"$$proxy": "cachedCmd",
									"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
									"command": "add",
									"params": {
										"args": [
											{ "$gpath": "app.dataPath" },
											"\\ptm.cloud.src"
										]
									}
								}
							},
							"default": {}
						}
					},
					"active": {
						"$$proxy": "cachedObj",
						"clsid": "0x54AFB9F0", // CLSID_DictionaryStreamView
						"stream": {
							"$$proxy": "cachedObj",
							"clsid": "0xCEFC4454", // CLSID_File
							"mode": "rwR",
							"path": {
								"$$proxy": "cachedCmd",
								"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
								"command": "add",
								"params": {
									"args": [
										{ "$gpath": "app.dataPath" },
										"\\ptm.act"
									]
								}
							}
						},
						"default": {}
					},
					"scenario": {
						"$$proxy": "cachedCmd",
						"processor": "objects.application",
						"command": "getCatalogData",
						"params": {
							"path": "app.config.policy.groups.patternsMatching.active.scenario",
							"default": {
								"$$proxy": "cachedCmd",
								"clsid": "0x61A30254", // CLSID_Scenario
								"code": [
									{
										"clsid": "0x3C365C39", // CLSID_VariantCtxCmd
										"operation": "logwrn",
										"args": [ "The blank PatternsMatching policy is used" ]
									},
									{
										"$ret": {
											"$val": {
												"$$proxy": "cachedObj",
												"clsid": "0x61A30254", // CLSID_Scenario
												"code": [
													{ "$ret": {} }
												]
											}
										}
									}
								]
							}
						}
					},
					"handlerPath": "app.config.extern.scenarios.qsc_match_patterns"
				},
				"eventsMatching": {
					"source": {
						"common": {
							"$$proxy": "cachedObj",
							"clsid": "0x54AFB9F0", // CLSID_DictionaryStreamView
							"readOnly": true,
							"stream": {
								"$$proxy": "cachedObj",
								"clsid": "0xCEFC4454", // CLSID_File
								"mode": "rR",
								"path": {
									"$$proxy": "cachedCmd",
									"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
									"command": "add",
									"params": {
										"args": [
											{ "$gpath": "app.imagePath" },
											"\\common.src"
										]
									}
								}
							},
							"default": {}
						},
						"evmCloud": {
							"$$proxy": "cachedObj",
							"clsid": "0x54AFB9F0", // CLSID_DictionaryStreamView
							"stream": {
								"$$proxy": "cachedObj",
								"clsid": "0xCEFC4454", // CLSID_File
								"mode": "rwR",
								"path": {
									"$$proxy": "cachedCmd",
									"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
									"command": "add",
									"params": {
										"args": [
											{ "$gpath": "app.imagePath" },
											"\\evm.cloud.src"
										]
									}
								}
							},
							"default": {}
						},
						"evmLocal": {
							"$$proxy": "cachedObj",
							"clsid": "0x54AFB9F0", // CLSID_DictionaryStreamView
							"readOnly": false,
							"stream": {
								"$$proxy": "cachedObj",
								"clsid": "0xCEFC4454", // CLSID_File
								"mode": "rwR",
								"path": {
									"$$proxy": "cachedCmd",
									"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
									"command": "add",
									"params": {
										"args": [
											{ "$gpath": "app.imagePath" },
											"\\evm.local.src"
										]
									}
								}
							},
							"default": {}
						}
					},
					"active": {
						"$$proxy": "cachedObj",
						"clsid": "0x54AFB9F0", // CLSID_DictionaryStreamView
						"stream": {
							"$$proxy": "cachedObj",
							"clsid": "0xCEFC4454", // CLSID_File
							"mode": "rwR",
							"path": {
								"$$proxy": "cachedCmd",
								"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
								"command": "add",
								"params": {
									"args": [
										{ "$gpath": "app.imagePath" },
										"\\evm.act"
									]
								}
							}
						},
						"default": {}
					},
					"scenario": {
						"$$proxy": "cachedCmd",
						"processor": "objects.application",
						"command": "getCatalogData",
						"params": {
							"path": "app.config.policy.groups.eventsMatching.active.scenario",
							"default": {
								"$$proxy": "cachedCmd",
								"clsid": "0x61A30254", // CLSID_Scenario
								"code": [
									{
										"clsid": "0x3C365C39", // CLSID_VariantCtxCmd
										"operation": "logwrn",
										"args": [ "The blank EventsMatching policy is used" ]
									},
									{
										"$ret": {
											"$val": {
												"$$proxy": "cachedObj",
												"clsid": "0x61A30254", // CLSID_Scenario
												"code": [
													{ "$ret": {} }
												]
											}
										}
									}
								]
							}
						}
					},
					"handlerPath": "app.config.extern.scenarios.qsc_apply_policy"
				}
			},
			"config": {},
			"verbose": {
				"$$proxy": "cachedCmd",
				"processor": "objects.application",
				"command": "getConfigValue",
				"params": {
					"default": false,
					"paths": "app.config.extern.debug.policy.verbose"
				}
			}
		},

		//
		// States (FIXME: Looks like that section contains not a state definitions but global variables!)
		//
		"state": {
			// Service config variables
			"service": {
				"allowUnload": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": null,
						"paths": "app.config.extern.debug.service.allowUnload"
					}
				},

				//
				// RPC to control service process (settings)
				//
				"svcControlRpcPort": {
					"port": 5889
				}
			}
		},

		//
		// Common objects' settings
		//
		"objects": {
		}
	},

	///////////////////////////////////////////////////////////////////////////////////////
	//
	// Configuration for processing events
	//
	///////////////////////////////////////////////////////////////////////////////////////
	"eventProcessor": {
		"baseMode": "common",
		"isService": false,

		//
		// Services' state storages
		//
		"state": {

			//
			// Bind section for Queue Manager's persistent data
			//
			"queueManager": {
				"$$proxy": "cachedObj",
				"clsid": "0x54AFB9F0", // CLSID_DictionaryStreamView
				"stream": {
					"$$proxy": "cachedObj",
					"clsid": "0xCEFC4454", // CLSID_File
					"mode": "rwR",
					"path": {
						"$$proxy": "cachedCmd",
						"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
						"command": "add",
						"params": {
							"args": [
								{ "$gpath": "app.dataPath" },
								"\\queuemgr.dat"
							]
						}
					}
				}
			},

			//
			// Bind section for FLS service persistent data
			//
			"flsService": {
				"$$proxy": "cachedObj",
				"clsid": "0x54AFB9F0", // CLSID_DictionaryStreamView
				"stream": {
					"$$proxy": "cachedObj",
					"clsid": "0xCEFC4454", // CLSID_File
					"mode": "rwR",
					"path": {
						"$$proxy": "cachedCmd",
						"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
						"command": "add",
						"params": {
							"args": [
								{ "$gpath": "app.dataPath" },
								"\\flssvc.dat"
							]
						}
					}
				}
			},

			//
			// Bind section for Valkyrie service persistent data
			//
			"valkyrieService": {
				"$$proxy": "cachedObj",
				"clsid": "0x54AFB9F0", // CLSID_DictionaryStreamView
				"stream": {
					"$$proxy": "cachedObj",
					"clsid": "0xCEFC4454", // CLSID_File
					"mode": "rwR",
					"path": {
						"$$proxy": "cachedCmd",
						"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
						"command": "add",
						"params": {
							"args": [
								{ "$gpath": "app.dataPath" },
								"\\valkyriesvc.dat"
							]
						}
					}
				}
			},

			//
			// Bind section for signature service persistent data
			//
			"signatureDataProvider": {
				"$$proxy": "cachedObj",
				"clsid": "0x54AFB9F0", // CLSID_DictionaryStreamView
				"stream": {
					"$$proxy": "cachedObj",
					"clsid": "0xCEFC4454", // CLSID_File
					"mode": "rwR",
					"path": {
						"$$proxy": "cachedCmd",
						"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
						"command": "add",
						"params": {
							"args": [
								{ "$gpath": "app.dataPath" },
								"\\signsvc.dat"
							]
						}
					}
				}
			}
		},

		//
		// The definition of external configuration files
		//
		"extern": {

			//
			// Load writable endpoint config
			//
			"endpoint": {
				"$$proxy": "cachedObj",
				"clsid": "0x54AFB9F0", // CLSID_DictionaryStreamView
				"stream": {
					"$$proxy": "cachedObj",
					"clsid": "0xCEFC4454", // CLSID_File
					"mode": "rwR",
					"path": {
						"$$proxy": "cachedCmd",
						"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
						"command": "add",
						"params": {
							"args": [
								{ "$gpath": "app.dataPath" },
								"\\endpoint.cfg"
							]
						}
					}
				}
			},

			//
			// Load writable cloud config
			//
			"cloud": {
				"$$proxy": "cachedObj",
				"clsid": "0x54AFB9F0", // CLSID_DictionaryStreamView
				"stream": {
					"$$proxy": "cachedObj",
					"clsid": "0xCEFC4454", // CLSID_File
					"mode": "rwR",
					"path": {
						"$$proxy": "cachedCmd",
						"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
						"command": "add",
						"params": {
							"args": [
								{ "$gpath": "app.dataPath" },
								"\\cloud.cfg"
							]
						}
					}
				}
			},

			//
			// Load scenarios.cfg
			//
			"scenarios": {
				"$$proxy": "cachedCmd",
				"processor": "objects.application",
				"command": "loadObject",
				"params": {
					"path": [
						{
							"$$proxy": "cachedCmd",
							"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
							"command": "add",
							"params": {
								"args": [
									{ "$gpath": "app.dataPath" },
									"\\scenarios.cfg"
								]
							}
						},
						{
							"$$proxy": "cachedCmd",
							"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
							"command": "add",
							"params": {
								"args": [
									{ "$gpath": "app.imagePath" },
									"\\scenarios.cfg"
								]
							}
						}
					],
					"default": {}
				}
			},

			//
			// Load Debug config
			//
			"debug": {
				"$$proxy": "cachedCmd",
				"processor": "objects.application",
				"command": "loadObject",
				"params": {
					"path": {
						"$$proxy": "cachedCmd",
						"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
						"command": "add",
						"params": {
							"args": [
								{ "$gpath": "app.configPath" },
								"\\debug.cfg"
							]
						}
					},
					"default": {}
				}
			}
		},

		//
		// Output settings
		//
		"output": {
			"$$proxy": "cachedCmd",
			"processor": "objects.application",
			"command": "getConfigValue",
			"params": {
				"mergeMode": 11, // All + mergeNestedDict
				"default": {
					"events": {
						"default": [
							// Common
							"^time$",
							"^type$",
							// Process
							"^process\\.cmdLine$",
							"^process\\.creationTime$",
							"^process\\.id$",
							"^process\\.imageFile\\.hash$",
							"^process\\.imageFile\\.path$",
							"^process\\.imageFile\\.type$",
							"^process\\.imageFile\\.verdict$",
							"^process\\.(parent\\.)+creationTime$$",
							"^process\\.(parent\\.)+id$",
							"^process\\.(parent\\.)+imageFile\\.hash$",
							"^process\\.(parent\\.)+imageFile\\.path$",
							"^process\\.(parent\\.)+imageFile\\.verdict$",
							"^process\\.(parent\\.)+pid$",
							"^process\\.(parent\\.)+token\\.user\\.name$",
							"^process\\.pid$",
							"^process\\.token\\.elevationType$",
							"^process\\.token\\.user\\.name$",
							// File copy
							"^source\\.path$",
							"^source\\.hash$",
							"^source\\.type$",
							"^destination\\.path$",
							// Registry
							"^registry\\.data$",
							"^registry\\.name$",
							"^registry\\.old\\.path$",
							"^registry\\.path$",
							// File
							"^file\\.hash$",
							"^file\\.path$",
							"^file\\.type$",
							// Target
							"^target\\.imageFile\\.path$",
							// Network
							"^address\\.ip$",
							"^address\\.port$",
							"^connection\\.local\\.ip$",
							"^connection\\.local\\.port$",
							"^connection\\.protocol$",
							"^connection\\.remote\\.ip$",
							"^connection\\.remote\\.port$",
							"^connection\\.status$",
							"^protocol$",
							// Raw access
							"^device$",
							"^disk$",
							"^volume\\.name$"
						]
					}
				},
				"paths": "app.config.extern.cloud.output"
			}
		},

		//
		// Scenario scripts settings
		//
		"script": {

			"filter_lle": {
				"type": 0, // Default LLE/MLE type for filtering (0 - no filtering)
				"pid": 2, // Default process PID for filtering (2 - no filtering)
				"outputQueue": "enrich_lle"
			},

			"match_patterns": {
				"outputQueue": "enrich_lle"
			},

			"enrich_lle": {
				"outputQueue": "apply_policy"
			},

			"get_fls_verdict": {
				"trustedVendorList": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": [
							"Microsoft",
							"Microsoft Anti-Virus Publisher",
							"Microsoft BV",
							"Microsoft Consumer Windows Publisher",
							"Microsoft Corp.",
							"Microsoft Corporation",
							"Microsoft Corporation(Europe)",
							"Microsoft Corporation(For Internal Use Only)",
							"Microsoft Corporation(Internal Use Only)",
							"Microsoft Corporation MSN",
							"Microsoft Corporation MSN(Europe)",
							"Microsoft Digital Media Code Signing",
							"Microsoft DRM Publisher",
							"Microsoft Dynamic Code Publisher",
							"Microsoft Fusion Verification",
							"Microsoft Great Plains Business Solutions",
							"Microsoft LIVE Gaming for Windows",
							"Microsoft LIVE Gaming on Windows",
							"Microsoft Mobile Device Privileged Component Update Publisher",
							"Microsoft Mobile Device Privileged Publisher",
							"Microsoft Mobile Device TCB Publisher",
							"Microsoft Mobile Device Unprivileged Component Update Publisher",
							"Microsoft Mobile Device Unprivileged Publisher",
							"Microsoft Mobile Device VSD Publisher",
							"Microsoft Mobile Software Privileged Execution Publisher",
							"Microsoft Open Technologies Inc",
							"Microsoft Time-Stamp Service",
							"Microsoft TimeStamping Service",
							"Microsoft Windows",
							"Microsoft Windows 2000 Publisher",
							"Microsoft Windows 2000 Publisher(Europe)",
							"Microsoft Windows 3rd party Component",
							"Microsoft Windows CE Cryptographic Service Provider Signature",
							"Microsoft Windows Component Publisher",
							"Microsoft Windows Early Launch Anti-malware Publisher",
							"Microsoft Windows Hardware Compatibility Publisher",
							"Microsoft Windows Home Entertainment Software Publisher",
							"Microsoft Windows Publisher",
							"Microsoft Windows Third Party Application Component",
							"Microsoft Windows XP Publisher",
							"Comodo",
							"comodo",
							"Comodo - Customer Support - Chennai",
							"Comodo - Customer Support - NJ",
							"Comodo CA Limited",
							"COMODO CA LimiTed",
							"Comodo CA Ltd",
							"Comodo CP, Inc",
							"Comodo Group Inc.",
							"Comodo Inc.",
							"Comodo Security Solutions",
							"Comodo Security Solutions, Inc",
							"Comodo Security Solutions, Inc.",
							"Comodo Support",
							"COMODO Time Stamping Signer",
							"Comodo Time Stamping Signer",
							"Mountain Security LTD"
						],
						"paths": "app.config.extern.debug.trustedVendorList"
					}
				}
			},

			"apply_policy": {
				"outputQueue": "enrich_mle",
				"enableDiscardedLog": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": false,
						"paths": "app.config.extern.debug.enableDiscardedLog"
					}
				},
				"discardedLog": {
					"$$proxy": "cachedObj",
					"clsid": "0xCEFC4454", // CLSID_File
					"useSimplePut": true,
					"path": {
						"$$proxy": "cachedCmd",
						"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
						"command": "add",
						"params": {
							"args": [
								{ "$gpath": "app.logPath" },
								"\\discarded_events.log"
							]
						}
					},
					"putDelimiter": "\n\n",
					"mode": "wtRW"
				},
				"lleRecieverCmd": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": null,
						"paths": "app.config.extern.debug.lleRecieverCmd"
					}
				}
			},

			"enrich_mle": {
				"outputQueue": "check_for_valkyrie"
			},

			"check_for_valkyrie": {
				"outputQueue": "transform_for_cloud",
				"submitQueue": "submit_to_valkyrie",
				"enableCache": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": true,
						"paths": "app.config.extern.debug.valkyrieCheck.enableCache"
					}
				},
				// Cache for files which has been already checked
				// and forwarded to submission to Valkyrie
				"cache": {
					"$$proxy": "cachedObj",
					"clsid": "0x404B416C" // CLSID_StringCache
				},
				"flsVerdict": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": 0, // Absent
						"paths": "app.config.extern.debug.valkyrieCheck.flsVerdict"
					}
				},
				// Custom check command
				"checkCmd": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": null,
						"paths": "app.config.extern.debug.valkyrieCheck.checkCmd"
					}
				}
			},

			"submit_to_valkyrie": {
				"retryCount": 3,
				// delay on failed submit in milliseconds
				// TODO: Too complex 2-level config... need optimization
				"retryDelay": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": 10000,
						"paths": "app.config.extern.debug.valkyrieSubmit.retryDelay"
					}
				},
				// Support replacement of submit command for ATS
				"submitCmd": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": null,
						"paths": "app.config.extern.debug.valkyrieSubmit.submitCmd"
					}
				}
			},

			"transform_for_cloud": {
				"outputQueue": "output",
				"enableOutputFilter": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": false,
						"paths": "app.config.extern.debug.enableOutputFilter"
					}
				},
				"outputFilter": {}
			},

			"output": {
				//
				// Main (cloud) receiver
				//
				"enableMainReceiver": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": true,
						"paths": "app.config.extern.debug.enableMainReceiver"
					}
				},
				"mainReceiver": {
					"$$proxy": "cachedCmd",
					"clsid": "0x61A30254", // CLSID_Scenario
					"code": [
						{
							"$if": {
								"$gpath": "app.config.extern.debug.useGcpReceiver",
								"$default": true
							},
							"$ret": {
								"$val": {
									"$$proxy": "cachedObj",
									"clsid": "0x51C1CAB6", // CLSID_GcpPubSubClient
									"saCredentials": {
										"$$proxy": "cachedCmd",
										"processor": "objects.application",
										"command": "getCatalogData",
										"params": { "path": "app.config.cloud.gcp.saCredentials" }
									},
									"pubSubTopic": {
										"$$proxy": "cachedCmd",
										"processor": "objects.application",
										"command": "getCatalogData",
										"params": { "path": "app.config.cloud.gcp.pubSubTopic" }
									},
									"caCertificates": {
										"$$proxy": "cachedCmd",
										"processor": "objects.application",
										"command": "getCatalogData",
										"params": { "path": "app.config.cloud.gcp.caCertificates" }
									},
									"enableStatistic": {
										"$$proxy": "cachedCmd",
										"processor": "objects.application",
										"command": "getCatalogData",
										"params": { "path": "app.config.cloud.gcp.enableStatistic" }
									},
									"statFilePath": {
										"$$proxy": "cachedCmd",
										"processor": "objects.application",
										"command": "getCatalogData",
										"params": { "path": "app.config.cloud.gcp.statFilePath" }
									}
								}
							}
						},
						{
							"$ret": {
								"$val": {
									"$$proxy": "cachedObj",
									"clsid": "0x95BA0E24", // CLSID_AwsFirehoseClient
									"accessKey": {
										"$$proxy": "cachedCmd",
										"processor": "objects.application",
										"command": "getCatalogData",
										"params": { "path": "app.config.cloud.aws.accessKey" }
									},
									"secretKey": {
										"$$proxy": "cachedCmd",
										"processor": "objects.application",
										"command": "getCatalogData",
										"params": { "path": "app.config.cloud.aws.secretKey" }
									},
									"deliveryStream": {
										"$$proxy": "cachedCmd",
										"processor": "objects.application",
										"command": "getCatalogData",
										"params": { "path": "app.config.cloud.aws.deliveryStream" }
									}
								}
							}
						}
					]
				},
				// Delay between two failed submission attemps (in milliseconds)
				"mainReceiverRetryDelay": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": 10000,
						"paths": "app.config.extern.debug.mainReceiverRetryDelay"
					}
				},
				// Batch output mode
				"enableMainReceiverBatchMode": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": true,
						"paths": "app.config.extern.debug.enableMainReceiverBatchMode"
					}
				},
				"batchQueue": "output_batch",

				//
				// JSON file receiver
				//
				"enableLogReceiver": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": false,
						"paths": "app.config.extern.debug.enableLogReceiver"
					}
				},
				"logReceiver": {
					"$$proxy": "cachedObj",
					"clsid": "0xCEFC4454", // CLSID_File
					"path": {
						"$$proxy": "cachedCmd",
						"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
						"command": "add",
						"params": {
							"args": [
								{ "$gpath": "app.logPath" },
								"\\output_events.log"
							]
						}
					},
					"putDelimiter": "\n\n",
					"mode": "wtRW"
				},

				//
				// Directory receiver
				//
				"enableDirReceiver": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": false,
						"paths": "app.config.extern.debug.enableDirReceiver"
					}
				},
				"dirReceiver": {
					"$$proxy": "cachedObj",
					"clsid": "0xDA024E57", // CLSID_FsDataStorage
					"deleteOnGet": false,
					"mode": "create|truncate",
					"prettyOutput": true,
					"path": {
						"$$proxy": "cachedCmd",
						"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
						"command": "add",
						"params": {
							"args": [
								{ "$gpath": "app.logPath" },
								"\\output_events"
							]
						}
					}
				},

				//
				// Local mode receiver
				//
				"enableLocalModeReceiver": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": true,
						"paths": "app.config.extern.endpoint.isLocalMode"
					}
				},
				"localModeReceiver": {
					"$$proxy": "cachedObj",
					"clsid": "0xCEFC4455", // CLSID_LocalEventsLogFile
					"daysStore": 3,
					"multiline": false,
					"mode": "create",
					"path": {
						"$$proxy": "cachedCmd",
						"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
						"command": "add",
						"params": {
							"args": [
								{ "$gpath": "app.logPath" },
								"\\output_events"
							]
						}
					}
				},

				//
				// debug.cfg receiver
				//
				"enableDebugReceiver": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": false,
						"paths": "app.config.extern.debug.enableDebugReceiver"
					}
				},
				"debugReceiver": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"paths": "app.config.extern.debug.debugReceiver"
					}
				}
			}
		},

		//
		// Object settings
		//
		"objects": {

			//
			// Cloud service client settings
			//
			"cloudService": {

				// Object can be AWS or GCP client
				"clsid": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": "0xD50330E1", // CLSID_CloudService
						"paths": [
							"app.config.extern.debug.cloud.provider"
						]
					},
					"httpParams": {
						"triesCount": 3
					}
				},

				// Heartbeat period
				"period": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": 300000, // 5 min
						"paths": [
							"app.config.extern.debug.cloud.heartbeatPeriod",
							"app.config.extern.endpoint.cloud.heartbeatPeriod"
						]
					}
				}
			},

			//
			// Queues Manager settings
			//
			"queueManager": {
				"clsid": "0x9E88430D", // CLSID_QueueManager
				"statePath": "app.config.state.queueManager.data",

				"queues": {
					"input": {
						"maxSize": 20000,
						"tag": "input",
						"notifyAcceptor": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getCatalogData",
							"params": {
								"path": "objects.eventEnricher"
							}
						},
						"filter": {
							"$$proxy": "cachedObj",
							"clsid": "0xA50FBEC6", // CLSID_PerProcessEventFilter
							"events": [
								// outcomming connect to the same remote
								{
									"type": 40, // LLE_NETWORK_CONNECT_OUT
									"timeout": 600000, // 10 min
									"hashedFields": [ "connection.remote.id", "connection.protocol" ]
								}
							]
						}
					},

					//
					// Queue for patterns matching facility
					//
					"match_patterns": {
						"maxSize": 10000,
						"tag": "qsc_match_patterns",
						"notifyAcceptor_debug": {
							"$$proxy": "cachedObj",
							"clsid": "0x2CFF4596", // CLSID_NullStream
							"queueName": "match_patterns"
						},
						"notifyAcceptor": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getCatalogData",
							"params": {
								"path": "objects.scenarioManager"
							}
						}
					},

					//
					// Events in queue are filtered by id and pid
					//
					"filter_lle": {
						"maxSize": 10000,
						"tag": "qsc_filter_lle",
						"notifyAcceptor": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getCatalogData",
							"params": {
								"path": "objects.scenarioManager"
							}
						}
					},

					//
					// LLE are enriched by flsVerdict in separate queue
					//
					"enrich_lle": {
						"maxSize": 10000,
						"tag": "qsc_enrich_lle",
						"notifyAcceptor_debug": {
							"$$proxy": "cachedObj",
							"clsid": "0x2CFF4596", // CLSID_NullStream
							"queueName": "enrich_lle"
						},
						"notifyAcceptor": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getCatalogData",
							"params": {
								"path": "objects.scenarioManager"
							}
						}
					},

					//
					// In this queue flsVerdict is calculated
					//
					"get_fls_verdict": {
						"maxSize": 10000,
						"tag": "qsc_get_fls_verdict",
						"notifyAcceptor": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getCatalogData",
							"params": {
								"path": "objects.scenarioManager"
							}
						}
					},

					//
					// Events in queue are filtered according to the policy
					//
					"apply_policy": {
						"maxSize": 20000,
						"tag": "qsc_apply_policy",
						"notifyAcceptor_debug": {
							"$$proxy": "cachedObj",
							"clsid": "0x2CFF4596", // CLSID_NullStream
							"queueName": "apply_policy"
						},
						"notifyAcceptor": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getCatalogData",
							"params": {
								"path": "objects.scenarioManager"
							}
						}
					},

					//
					// Events in queue are enriched by data necessary for cloud
					//
					"enrich_mle": {
						"maxSize": 10000,
						"tag": "qsc_enrich_mle",
						"notifyAcceptor": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getCatalogData",
							"params": {
								"path": "objects.scenarioManager"
							}
						}
					},

					//
					// Additional queue for events for file hash asynchronious calculation
					//
					"calc_file_hash": {
						"maxSize": 5000,
						"tag": "qsc_calc_file_hash",
						"notifyAcceptor": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getCatalogData",
							"params": {
								"path": "objects.scenarioManager"
							}
						}
					},

					//
					// Queue of events to be checked for submit to Valkyrie
					//
					"check_for_valkyrie": {
						"maxSize": 10000,
						"tag": "qsc_check_for_valkyrie",
						"notifyAcceptor": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getCatalogData",
							"params": { "path": "objects.scenarioManager" }
						}
					},

					//
					// Queue of files to be submitted to Valkyrie
					//
					"submit_to_valkyrie": {
						"circular": true,
						"maxSize": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getConfigValue",
							"params": {
								"default": 10000,
								"paths": "app.config.extern.debug.valkyrieSubmit.queueMaxSize"
							}
						},
						"saveSize": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getConfigValue",
							"params": {
								"default": 7500,
								"paths": "app.config.extern.debug.valkyrieSubmit.queueSaveSize"
							}
						},
						"persistent": true,
						"tag": "qsc_submit_to_valkyrie",
						"notifyAcceptor": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getCatalogData",
							"params": { "path": "objects.scenarioManager" }
						}
					},

					//
					// Events in queue are transformed to the cloud-friendly format
					//
					"transform_for_cloud": {
						"maxSize": 10000,
						"tag": "qsc_transform_for_cloud",
						"notifyAcceptor": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getCatalogData",
							"params": {
								"path": "objects.scenarioManager"
							}
						}
					},

					//
					// Events in queue are outputed to the destination receivers
					//
					"output": {
						"maxSize": 10000,
						"saveSize": 7500,
						"tag": "qsc_output",
						"persistent": true,
						"circular": true,
						"notifyAcceptor": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getCatalogData",
							"params": {
								"path": "objects.scenarioManager"
							}
						}
					},

					//
					// Queue with out events groupped into batches
					//
					"output_batch": {
						"maxSize": 2000,
						"saveSize": 1500,
						"tag": "qsc_output_batch",
						"batchSize": 100,
						"batchTimeout": 5000,
						"persistent": true,
						"circular": true,
						"notifyAcceptor": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getCatalogData",
							"params": {
								"path": "objects.scenarioManager"
							}
						}
					}
				}
			},

			//
			// Scenario manager settings
			//
			"scenarioManager": {
				"clsid": "0xB15D1291", // CLSID_ScenarioManager
				"collectStatistic": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": false,
						"paths": "app.config.extern.debug.scenarioManager.collectStatistic"
					}
				},
				"threadPools": {
					"DefaultPool": { "size": 2 }, // count of workring threads in default pool
					"SlowPool": { "size": 2 }, // Pool for slow operations: hash calc, etc.
					"OutputPool": { "size": 1 }, // Pool for output. It contains sleep() calling
					"ValkyriePool": { "size": 1 }, // It should be in separate pool as contains sleep() calling
					"ApplyPolicyPool": { "size": 2 } // Check if we need pool for it
				}
			},

			//
			// Network monitor controller settings
			//
			"networkMonitorController": {
				"clsid": "0x28D531FF", // CLSID_NetworkMonitorController
				"receiver": {
					"$$proxy": "cachedObj",
					"clsid": "0xDE854411", // CLSID_QueueProxy
					"name": "input"
				}
			},

			//
			// System monitor controller settings
			//
			"systemMonitorController": {
				"clsid": "0x5A601182", // CLSID_SystemMonitorController
				"receiver": {
					"$$proxy": "cachedObj",
					"clsid": "0xDE854411", // CLSID_QueueProxy
					"name": "input"
				},
				"threadsCount": 2, // TODO: We can decrease it to 1 after tests and events optimization
				"startMode": { // default startup mode for service
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": "auto",
						"paths": "app.config.serviceStartMode"
					}
				},
				"stopDriverOnShutdown": true,

				"injectNewProcesses": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": 1, // 0 - disable, 1 - driver, 2 - service
						"paths": "app.config.extern.debug.systemMonitorController.injectNewProcesses"
					}
				},

				// Sysmon driver configuration
				"driverConfig": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"mergeMode": 11, // All + mergeNestedDict
						"default": {
							"openProcessRepeatTimeout": 10000, // Timeout between sending the same openProcess events
							"regEventRepeatTimeout": 10000, // Timeout between sending the same RegCreateKey & RegSetValueevents
							"verifyInjectedDll": false, // Disable signature verification
							"eventFlags": 4294966655 // Disable sending FileOpen (7) & FileClose (9)
						},
						"paths": "app.config.extern.debug.edrdrv"
					}
				},

				// Selfprotection configuration
				"selfprotectConfig": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"mergeMode": 27, // All + mergeNestedDict + MergeNestedSeq
						"default": {
							"processRules": [
								{
									"type": 2, // Protected
									"mode": 1, // Replace
									"persistent": true,
									"tag": "edragent",
									"rules": [
										// edrsvc.exe
										{
											"imagePath": {
												"$$proxy": "cachedCmd",
												"processor": "objects.fileDataProvider",
												"command": "normalizePathName",
												"params": {
													"path": {
														"$$proxy": "cachedCmd",
														"processor": "objects.application",
														"command": "getCatalogData",
														"params": {
															"path": "app.imageFile"
														}
													},
													"type": 2 // PathType::NtPath
												}
											},
											"value": true,
											"inherit": true
										}
									]
								},
								{
									"type": 1, // Trusted
									"mode": 1, // Replace
									"persistent": true,
									"tag": "edragent",
									"rules": [
										// edrsvc.exe
										{
											"imagePath": {
												"$$proxy": "cachedCmd",
												"processor": "objects.fileDataProvider",
												"command": "normalizePathName",
												"params": {
													"path": {
														"$$proxy": "cachedCmd",
														"processor": "objects.application",
														"command": "getCatalogData",
														"params": {
															"path": "app.imageFile"
														}
													},
													"type": 2 // PathType::NtPath
												}
											},
											"value": true,
											"inherit": true
										},
										// edrcon.exe
										{
											"imagePath": "edrcon.exe",
											"value": true,
											"inherit": true
										}
									]
								},
								{
									"type": 3, // EnableInject
									"mode": 1, // Replace
									"persistent": true,
									"tag": "edragent",
									"rules": [
										// edrsvc.exe
										{
											"imagePath": {
												"$$proxy": "cachedCmd",
												"processor": "objects.fileDataProvider",
												"command": "normalizePathName",
												"params": {
													"path": {
														"$$proxy": "cachedCmd",
														"processor": "objects.application",
														"command": "getCatalogData",
														"params": {
															"path": "app.imageFile"
														}
													},
													"type": 2 // PathType::NtPath
												}
											},
											"value": false,
											"inherit": true
										}
									]
								}
							],

							"fileRules": {
								"mode": 1, // Replace
								"tag": "edragent",
								"rules": [
									// Binary path
									{
										"path": {
											"$$proxy": "cachedCmd",
											"processor": "objects.application",
											"command": "getCatalogData",
											"params": {
												"path": "app.imagePath"
											}
										},
										"value": 2, // AccessType::ReadOnly
										"recursive": true
									},
									// Data path
									{
										"path": {
											"$$proxy": "cachedCmd",
											"processor": "objects.application",
											"command": "getCatalogData",
											"params": {
												"path": "app.dataPath"
											}
										},
										"value": 2, // AccessType::ReadOnly
										"recursive": true
									}
								]
							},

							"regRules": {
								"mode": 1, // Replace
								"tag": "edragent",
								"rules": [
									// edrsvc service registry key (non-recursive)
									// Service manager should be able to create and write subkeys
									{
										"path": "%hklm%\\system\\currentcontrolset\\services\\edrsvc",
										"value": 2, // AccessType::ReadOnly
										"recursive": false
									},
									// edrdrv driver registry key (non-recursive)
									// Service manager should be able to create and write subkeys
									{
										"path": "%hklm%\\system\\currentcontrolset\\services\\edrdrv",
										"value": 2, // AccessType::ReadOnly
										"recursive": false
									}
								]
							}
						},
						"paths": "app.config.extern.debug.selfprotect"
					}
				}
			},

			//
			// Process monitor controller settings
			//
			"processMonitorController": {
				"clsid": "0xC0A1AD0B", // CLSID_ProcessMonitorController
				"receiver": {
					"$$proxy": "cachedObj",
					"clsid": "0xDE854411", // CLSID_QueueProxy
					"name": "input"
				},
				"injectAllOnStart": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": true,
						"paths": "app.config.extern.debug.processMonitorController.injectAllOnStart"
					}
				},
				"uninjectAllOnExit": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": false,
						"paths": "app.config.extern.debug.processMonitorController.uninjectAllOnExit"
					}
				},
				"targetProcessName": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": "",
						"paths": "app.config.extern.debug.processMonitorController.targetProcessName"
					}
				},
				"injectionConfig": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"mergeMode": 11, // All + mergeNestedDict
						"default": {
							"queueSize": 10000, // Size of queue with events
							"waitAnswer": false, // Wait for answer from service on event sending
							"events": [
								{
									"id": 0, // PROCMON_PROCESS_MEMORY_READ
									"timeout": 10000
								},
								{
									"id": 1, // PROCMON_PROCESS_MEMORY_WRITE
									"timeout": 10000
								},
								{
									"id": 2, // PROCMON_API_SET_WINDOWS_HOOK
									"timeout": 10000
								},
								{
									"id": 3, // PROCMON_STORAGE_RAW_ACCESS_WRITE
									"timeout": 10000
								},
								{
									"id": 4, // PROCMON_STORAGE_RAW_LINK_CREATE
									"timeout": 10000
								},
								{
									"id": 5, // PROCMON_API_GET_KEYBOARD_STATE
									"timeout": 10000
								},
								{
									"id": 6, // PROCMON_API_GET_KEY_STATE
									"timeout": 10000
								},
								{
									"id": 7, // PROCMON_API_REGISTER_HOT_KEY
									"timeout": 10000
								},
								{
									"id": 8, // PROCMON_API_REGISTER_RAW_INPUT_DEVICES
									"timeout": 10000
								},
								{
									"id": 9, // PROCMON_API_BLOCK_INPUT
									"timeout": 60000
								},
								{
									"id": 10, // PROCMON_API_ENABLE_WINDOW
									"timeout": 10000
								},
								{
									"id": 11, // PROCMON_API_GET_CLIPBOARD_DATA
									"timeout": 10000
								},
								{
									"id": 12, // PROCMON_API_SET_CLIPBOARD_VIEWER
									"timeout": 10000
								},
								{
									"id": 13, // PROCMON_API_SEND_INPUT
									"timeout": 60000
								},
								{
									"id": 14, // PROCMON_API_KEYBD_EVENT
									"timeout": 60000
								},
								{
									"id": 15, // PROCMON_API_ENUM_AUDIO_ENDPOINTS
									"timeout": 10000
								},
								{
									"id": 16, // PROCMON_API_WAVE_IN_OPEN
									"timeout": 10000
								},
								{
									"id": 17, // PROCMON_API_MOUSE_EVENT
									"timeout": 60000
								},
								{
									"id": 18, // PROCMON_COPY_WINDOW_BITMAP
									"timeout": 60000
								},
								{
									"id": 19, // PROCMON_DESKTOP_WALLPAPER_SET
									"timeout": 10000
								},
								{
									"id": 20, // PROCMON_API_CLIP_CURSOR
									"timeout": 60000
								},
								{
									"id": 21, // PROCMON_INTERACTIVE_LOGON
									"timeout": 10000
								},
								{
									"id": 22, // PROCMON_THREAD_IMPERSONATION
									"timeout": 60000
								},
								{
									"id": 23, // PROCMON_PIPE_IMPERSONATION
									"timeout": 10000
								}
							]
						},
						"paths": "app.config.extern.debug.processMonitorController.injectionConfig"
					}
				}
			},

			//
			// Process Data Provider service settings
			//
			"processDataProvider": {
				"clsid": "0x92FA1819", // CLSID_ProcessDataProvider
				"purgeTimeout": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": 600000, // 10 min
						"paths": "app.config.extern.debug.processDataProvider.purgeTimeout"
					}
				},
				"purgeMask": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": 255, // 0xFF
						"paths": "app.config.extern.debug.processDataProvider.purgeMask"
					}
				}
			},

			//
			// File Data Provider service settings
			//
			"fileDataProvider": {
				"clsid": "0x2256416D", // CLSID_FileDataProvider
				"formats": {
					"EXECUTABLE": ".exe;.dll;.sys;.cpl;.mui;.tlb;.scr"
				},
				"purgeTimeout": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": 300000, // 5 min
						"paths": "app.config.extern.debug.fileDataProvider.purgeTimeout"
					}
				}
			},

			//
			// User Data Provider service settings
			//
			"userDataProvider": {
				"clsid": "0x7C249FE7" // CLSID_UserDataProvider
			},

			//
			// Signature Data Provider service settings
			//
			"signatureDataProvider": {
				"clsid": "0x2588A006", // CLSID_SignDataProvider
				"statePath": "app.config.state.signatureDataProvider.data"
				//"disableNetworkAccess": true
			},

			//
			// Path Converter service settings
			//
			"pathConverter": {
				"clsid": "0xB8901152" // CLSID_PathConverter
			},

			//
			// FLS service settings
			//
			"flsService": {
				"clsid": "0xE6404215", // CLSID_FlsService
				"statePath": "app.config.state.flsService.data",
				"url": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"paths": "app.config.cloud.fls.url"
					}
				},
				"verdictCache": [
					{
						"verdict": 0, // Absent
						"purgeTimeout": 7200 // 2 hours
					},
					{
						"verdict": 1, // Safe
						"purgeTimeout": 172800 // 2 days
					},
					{
						"verdict": 2, // Malicious
						"purgeTimeout": 172800 // 2 days
					},
					{
						"verdict": 3, // Unknown
						"purgeTimeout": 7200 // 2 hours
					}
				]
			},

			//
			// Valkyrie client service settings
			//
			"valkyrieService": {
				"clsid": "0x2B758353", // CLSID_ValkyrieService
				"statePath": "app.config.state.valkyrieService.data",
				"apiKey": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"paths": "app.config.cloud.valkyrie.apiKey"
					}
				},
				"url": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"paths": "app.config.cloud.valkyrie.url"
					}
				},
				"endpointId": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"paths": "app.config.license.endpointId"
					}
				}
			},

			//
			// File Data Provider service settings
			//
			"eventEnricher": {
				"clsid": "0x9E4CE9E1", // CLSID_EventEnricher
				"receiver": {
					"$$proxy": "cmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": {
							"$$proxy": "cachedObj",
							"clsid": "0xDE854411", // CLSID_QueueProxy
							"name": "match_patterns"
						},
						"paths": "app.config.extern.debug.rawEventRecieverCmd"
					}
				}
			},

			//
			// Signature context settings
			//
			"contextService": {
				"clsid": "0x8548CCB3", // CLSID_ContextService
				"baskets": {
					//"FILE_COPY_READ_WRITE": {
					//	"maxSize": 1000
					//},
					//"FILE_COPY_WRITE_READ": {
					//	"maxSize": 1000
					//}
				}
			}
		},

		//
		// Message handlers for events processing
		//
		"messageHandlers": {

			//
			// App Initialization script
			//
			"AppStarted": [
				{
					"info": "Initialize GCP logging",
					"processor": { "clsid": "0xEBC0DB8E" }, // CLSID_GcpController,
					"command": "initializeLogging",
					"constParams": true,
					"params": {
						"tracers": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getConfigValue",
							"params": {
								"default": [],
								"paths": "app.config.extern.debug.cloud.gcp.logTracers"
							}
						},
						"logLevel": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getConfigValue",
							"params": {
								"default": 2, // Error
								"paths": "app.config.extern.debug.cloud.gcp.logLevel"
							}
						}
					}
				},
				{
					"info": "Starting Scenarios Manager",
					"processor": "objects.scenarioManager",
					"command": "start",
					"constParams": true,
					"params": {}
				},
				{
					"info": "Recompiling the EventsMatching policy",
					"processor": {
						"clsid": "0x21C7DFD5", // CLSID_PolicyCompiler
						"config": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "loadObject",
							"params": {
								"path": {
									"$$proxy": "cachedCmd",
									"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
									"command": "add",
									"params": {
										"args": [
											{ "$gpath": "app.imagePath" },
											"\\compiler.cfg"
										]
									}
								},
								"default": {}
							}
						},
						"verbose": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getConfigValue",
							"params": {
								"paths": "app.config.policy.verbose"
							}
						}
					},
					"command": "compile",
					"constParams": true,
					"params": {
						"group": "eventsMatching",
						"data": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getConfigValue",
							"params": {
								"paths": "app.config.policy.groups.eventsMatching.source"
							}
						}
					}
				},
				{
					"info": "Recompiling the PatternsMatching policy",
					"processor": {
						"clsid": "0x21C7DFD5", // CLSID_PolicyCompiler
						"config": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "loadObject",
							"params": {
								"path": {
									"$$proxy": "cachedCmd",
									"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
									"command": "add",
									"params": {
										"args": [
											{ "$gpath": "app.imagePath" },
											"\\compiler.cfg"
										]
									}
								},
								"default": {}
							}
						},
						"verbose": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getConfigValue",
							"params": {
								"paths": "app.config.policy.verbose"
							}
						}
					},
					"command": "compile",
					"constParams": true,
					"params": {
						"group": "patternsMatching",
						"data": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getConfigValue",
							"params": {
								"paths": "app.config.policy.groups.patternsMatching.source"
							}
						}
					}
				},
				{
					"info": "Starting Queues manager",
					"processor": "objects.queueManager",
					"command": "start",
					"constParams": true,
					"params": {}
				},
				{
					"info": "Starting FLS Service",
					"processor": "objects.flsService",
					"command": "start",
					"constParams": true,
					"params": {}
				},
				{
					"info": "Starting Valkyrie Service",
					"processor": "objects.valkyrieService",
					"command": "start",
					"constParams": true,
					"params": {}
				},
				{
					"info": "Starting User Data Provider",
					"processor": "objects.userDataProvider",
					"command": "start",
					"constParams": true,
					"params": {}
				},
				{
					"info": "Starting Process Data Provider",
					"processor": "objects.processDataProvider",
					"command": "start",
					"constParams": true,
					"params": {}
				},
				{
					"info": "Starting Signature Data Provider",
					"processor": "objects.signatureDataProvider",
					"command": "start",
					"constParams": true,
					"params": {}
				},
				{
					"info": "Starting File Data Provider",
					"processor": "objects.fileDataProvider",
					"command": "start",
					"constParams": true,
					"params": {}
				},
				{
					"info": "Starting Event Enricher",
					"processor": "objects.eventEnricher",
					"command": "start",
					"constParams": true,
					"params": {}
				},
				{
					"info": "Starting Signature Context",
					"processor": "objects.contextService",
					"command": "start",
					"constParams": true,
					"params": {}
				},
				{
					"info": "Starting System Monitor",
					"processor": "objects.systemMonitorController",
					"command": "start",
					"constParams": true,
					"params": {}
				},
				{
					"info": "Starting Process Monitor",
					"processor": "objects.processMonitorController",
					"command": "start",
					"constParams": true,
					"params": {}
				},
				{
					"info": "Starting Network Monitor",
					"clsid": "0x61A30254", // CLSID_Scenario
					"name": "NetmonStarter",
					"code": [
						{
							"$if": {
								"$$proxy": "cachedCmd",
								"processor": "objects.application",
								"command": "getConfigValue",
								"params": {
									"default": true,
									"paths": "app.config.extern.debug.networkMonitorController.enable"
								}
							},

							"clsid": "0x59D2EF6E", // CLSID_CallCtxCmd
							"command": {
								"$$proxy": "cachedObj",
								"clsid": "0xACE892B6", // CLSID_Command
								"processor": "objects.networkMonitorController",
								"command": "start"
							}
						}
					]
				},
				{
					"info": "Starting Cloud Interaction Service",
					"processor": "objects.cloudService",
					"command": "start",
					"constParams": true,
					"params": {}
				}
			],

			//
			// App Finalization script
			//
			"AppFinishing": [
				{
					"info": "Stopping Network Monitor",
					"processor": "objects.networkMonitorController",
					"command": "stop",
					"constParams": true,
					"params": {}
				},
				{
					"info": "Stopping Process Monitor",
					"processor": "objects.processMonitorController",
					"command": "stop",
					"constParams": true,
					"params": {}
				},
				{
					"info": "Stopping System Monitor",
					"processor": "objects.systemMonitorController",
					"command": "stop",
					"constParams": true,
					"params": {}
				},
				{
					"info": "Stopping Event Enricher",
					"processor": "objects.eventEnricher",
					"command": "stop",
					"constParams": true,
					"params": {}
				},
				{
					"info": "Stopping Signature Context",
					"processor": "objects.contextService",
					"command": "stop",
					"constParams": true,
					"params": {}
				},
				{
					"info": "Stopping Signature Data Provider",
					"processor": "objects.signatureDataProvider",
					"command": "stop",
					"constParams": true,
					"params": {}
				},
				{
					"info": "Stopping File Data Provider",
					"processor": "objects.fileDataProvider",
					"command": "stop",
					"constParams": true,
					"params": {}
				},
				{
					"info": "Stopping Process Data Provider",
					"processor": "objects.processDataProvider",
					"command": "stop",
					"constParams": true,
					"params": {}
				},
				{
					"info": "Stopping User Data Provider",
					"processor": "objects.userDataProvider",
					"command": "stop",
					"constParams": true,
					"params": {}
				},
				{
					"info": "Stopping FLS Service",
					"processor": "objects.flsService",
					"command": "stop",
					"constParams": true,
					"params": {}
				},
				{
					"info": "Stopping Valkyrie Service",
					"command": "stop",
					"constParams": true,
					"processor": "objects.valkyrieService",
					"params": {}
				},
				{
					"info": "Stopping Scenarios Manager",
					"processor": "objects.scenarioManager",
					"command": "stop",
					"constParams": true,
					"params": {}
				},
				{
					"info": "Stopping Queues manager",
					"processor": "objects.queueManager",
					"command": "stop",
					"constParams": true,
					"params": {}
				},
				{
					"info": "Stopping Cloud Interaction Service",
					"processor": "objects.cloudService",
					"command": "stop",
					"constParams": true,
					"params": {}
				}
			],

			"RequestAppUpdate": [
				{
					"info": "Start application updating procedure",
					"processor": "objects.application",
					"command": "log",
					"constParams": true,
					"params": { "message": "Application Update command is received. Calling new installer..." }
				},
				{
					"info": "Calling service update",
					"processor": "objects.application",
					"command": "update",
					"constParams": true,
					"params": {}
				}
			],

			"RequestAppUninstall": [
				{
					"info": "Start application uninstalling procedure",
					"processor": "objects.application",
					"command": "log",
					"constParams": true,
					"params": { "message": "Uninstallation command is received. Calling uninstaller..." }
				},
				{
					"info": "Calling service uninstall",
					"processor": "objects.application",
					"command": "run",
					"constParams": true,
					"params": {
						"path": "msiexec",
						"params": {
							"$$proxy": "cachedCmd",
							"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
							"command": "add",
							"params": {
								"args": [
									"/x {",
									{ "$gpath": "app.installationId" },
									"} /q"
								]
							}
						},
						"timeout": 0
					}
				},
				{
					"info": "Writting uninstallation marker",
					"command": "write",
					"processor": {
						"clsid": "0xCEFC4454", // CLSID_File
						"mode": "wtPRW",
						"path": {
							"$$proxy": "cachedCmd",
							"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
							"command": "add",
							"params": {
								"args": [
									{ "$gpath": "app.dataPath" },
									"\\uninstall.info"
								]
							}
						}
					},
					"params": {
						"data": "Application is uninstalled",
						"eol": true
					}
				}

				//{
				//	"info": "FOR TEST: Reporting uninstallation status to the cloud",
				//	"command": "reportUninstall",
				//	"processor": "objects.cloudService",
				//	"params": { "failSafe": true }
				//}

				//{
				//	"clsid": "0x61A30254", // CLSID_Scenario
				//	"name": "callInstaller",
				//	"addParams": true,
				//	"code": [
				//		{
				//			"clsid": "0x59D2EF6E", // CLSID_CallCtxCmd
				//			"command": {
				//				"$$proxy": "cachedObj",
				//				"clsid": "0xACE892B6", // CLSID_Command
				//				"processor": "objects.application",
				//				"command": "run",
				//				"params": {
				//				}
				//			},
				//			"ctxParams": {
				//				"path": { "$path": "event" }
				//			}
				//		}
				//	]
				//}
			],

			"RequestPolicyUpdate": [
				{
					"info": "Compile EVM policy",
					"processor": {
						"clsid": "0x21C7DFD5", // CLSID_PolicyCompiler
						"config": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "loadObject",
							"params": {
								"path": {
									"$$proxy": "cachedCmd",
									"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
									"command": "add",
									"params": {
										"args": [
											{ "$gpath": "app.imagePath" },
											"\\compiler.cfg"
										]
									}
								},
								"default": {}
							}
						},
						"verbose": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getConfigValue",
							"params": {
								"paths": "app.config.policy.verbose"
							}
						}
					},
					"command": "compile",
					"constParams": true,
					"params": {
						"group": "eventsMatching",
						"data": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getConfigValue",
							"params": {
								"paths": "app.config.policy.groups.eventsMatching.source"
							}
						}
					}
				},
				{
					"info": "Compile PTM policy",
					"processor": {
						"clsid": "0x21C7DFD5", // CLSID_PolicyCompiler
						"config": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "loadObject",
							"params": {
								"path": {
									"$$proxy": "cachedCmd",
									"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
									"command": "add",
									"params": {
										"args": [
											{ "$gpath": "app.imagePath" },
											"\\compiler.cfg"
										]
									}
								},
								"default": {}
							}
						},
						"verbose": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getConfigValue",
							"params": {
								"paths": "app.config.policy.verbose"
							}
						}
					},
					"command": "compile",
					"constParams": true,
					"params": {
						"group": "patternsMatching",
						"data": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getConfigValue",
							"params": {
								"paths": "app.config.policy.groups.patternsMatching.source"
							}
						}
					}
				}
			],
			"PolicyIsUpdated": [
				{
					"info": "Update reload-pending scenarios",
					"processor": "objects.scenarioManager",
					"command": "updateScenarios"
				}
			],
			"RequestAppRestart": [
				{
					"info": "Edr service restart is requested",
					"processor": "objects.application",
					"command": "runInstance",
					"constParams": true,
					"params": { "args": "restart" }
				}
			],

			"QueueOverflow": [
				{
					"info": "Dump of queues statistic:",
					"processor": "objects.queueManager",
					"command": "dump",
					"constParams": true
				},
				{
					"info": "Dump of scenarios statistic:",
					"processor": "objects.scenarioManager",
					"command": "dumpStatistic",
					"constParams": true
				}
			],

			"CloudConfigurationIsChanged": [
				{
					"info": "Update FLS Service settings",
					"processor": "objects.flsService",
					"command": "updateSettings",
					"constParams": true,
					"params": {
						"url": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getConfigValue",
							"params": {
								"paths": "app.config.cloud.fls.url"
							}
						}
					}
				},
				{
					"info": "Update Valkyrie Service settings",
					"processor": "objects.valkyrieService",
					"command": "updateSettings",
					"constParams": true,
					"params": {
						"apiKey": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getConfigValue",
							"params": {
								"paths": "app.config.cloud.valkyrie.apiKey"
							}
						},
						"url": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getConfigValue",
							"params": {
								"paths": "app.config.cloud.valkyrie.url"
							}
						},
						"endpointId": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getConfigValue",
							"params": {
								"paths": "app.config.license.endpointId"
							}
						}
					}
				},
				{
					"info": "Mark transform_for_cloud scenario for reloading",
					"processor": "objects.application",
					"command": "putCatalogData",
					"constParams": true,
					"params": {
						"path": "app.config.extern.scenarios.qsc_transform_for_cloud.version",
						"data": {
							"$$proxy": "cachedObj",
							"clsid": "0xACE892B6", // CLSID_Command
							"processor": "objects.application",
							"command": "getTickTime"
						}
					}
				},
				{
					"info": "Update reload-pending scenarios",
					"processor": "objects.scenarioManager",
					"command": "updateScenarios"
				}
			]
		}
	},

	///////////////////////////////////////////////////////////////////////////////////////
	//
	// Windows Service mode
	//
	///////////////////////////////////////////////////////////////////////////////////////
	"service": {
		"baseMode": "eventProcessor",
		"isService": true,

		"hangOnMemoryLeaks": { // Hand after memory leaks dumping for N ms
			"$$proxy": "cachedCmd",
			"processor": "objects.application",
			"command": "getConfigValue",
			"params": {
				"default": 200000, // 3+ min
				"paths": "app.config.extern.debug.hangOnMemoryLeaks"
			}
		},

		"messageHandlers": {
			"AppStarted": [
				{
					"info": "Starting Application IPC server",
					"command": "start",
					"constParams": true,
					"processor": "objects.svcControlRpcServer"
				}
			],
			"AppFinishing": [
				{
					"info": "Stopping Application IPC server",
					"command": "stop",
					"constParams": true,
					"processor": "objects.svcControlRpcServer"
				}
			]
		},

		//
		// Services and global objects
		//
		"objects": {
			"svcControlRpcServer": {
				"$$proxy": "cachedCmd",
				"processor": "objects.application",
				"command": "getConfigValue",
				"params": {
					"mergeMode": 11, // All + mergeNestedDict
					"default": {
						"clsid": "0xDAA32B15", // CLSID_JsonRpcServer
						"processor": "objects.application",
						"channelMode": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getConfigValue",
							"params": {
								"default": "encrypted",
								"paths": "app.config.extern.debug.rpc.serverChannelMode"
							}
						},
						"encryption": "aes"
					},
					"paths": "app.config.state.service.svcControlRpcPort"
				}
			}
		}
	},

	///////////////////////////////////////////////////////////////////////////////////////
	//
	// Basic application logic. It's common for client & server modes
	//
	///////////////////////////////////////////////////////////////////////////////////////
	"application": {
		"baseMode": "common",

		//
		// Services and global objects
		//
		"objects": {

			//
			// System monitor controller settings
			//
			"systemMonitorController": {
				"clsid": "0x5A601182", // CLSID_SystemMonitorController
				"startMode": { // default startup mode for service
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": "auto",
						"paths": "app.config.serviceStartMode"
					}
				}
			},

			"processMonitorController": {
				"clsid": "0xC0A1AD0B" // CLSID_ProcessMonitorController
			},

			//
			// RPC to control service process
			//
			"svcControlRpcClient": {
				"$$proxy": "cachedCmd",
				"processor": "objects.application",
				"command": "getConfigValue",
				"params": {
					"mergeMode": 11, // All + mergeNestedDict
					"default": {
						"clsid": "0x694C9C8E", // CLSID_JsonRpcClient
						"host": "127.0.0.1",
						"timeout": 120,
						"channelMode": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getConfigValue",
							"params": {
								"default": "encrypted",
								"paths": "app.config.extern.debug.rpc.clientChannelMode"
							}
						},
						"encryption": "aes",
						"verbose": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getConfigValue",
							"params": {
								"default": false,
								"paths": "app.config.extern.debug.rpc.clientVerbose"
							}
						}
					},
					"paths": "app.config.state.service.svcControlRpcPort"
				}
			},

			//
			// Cloud service client settings
			//
			"cloudService": {
				"clsid": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": "0xD50330E1", // CLSID_CloudService
						"paths": [
							"app.config.extern.debug.cloud.provider"
						]
					}
				},
				"httpParams": {
					"triesCount": 3
				}
			}
		},

		//
		// External configuration files (common files are mounted as a readonly)
		//
		"extern": {
			"endpoint": {
				"$$proxy": "cachedCmd",
				"processor": "objects.application",
				"command": "loadObject",
				"params": {
					"path": {
						"$$proxy": "cachedCmd",
						"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
						"command": "add",
						"params": {
							"args": [
								{ "$gpath": "app.dataPath" },
								"\\endpoint.cfg"
							]
						}
					},
					"default": {}
				}
			},
			"debug": {
				"$$proxy": "cachedCmd",
				"processor": "objects.application",
				"command": "loadObject",
				"params": {
					"path": {
						"$$proxy": "cachedCmd",
						"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
						"command": "add",
						"params": {
							"args": [
								{ "$gpath": "app.imagePath" },
								"\\debug.cfg"
							]
						}
					},
					"default": {}
				}
			}
		}

	},

	///////////////////////////////////////////////////////////////////////////////////////
	//
	// Basic server logic (uses for remote command execution)
	//
	///////////////////////////////////////////////////////////////////////////////////////
	"server": {
		"baseMode": "application",

		"messageHandlers": {
			"AppStarted": [
				{
					"info": "Starting Application IPC server",
					"command": "start",
					"constParams": true,
					"processor": "objects.appRpcServer"
				}
			],
			"AppFinishing": [
				{
					"info": "Stopping Application IPC server",
					"command": "stop",
					"constParams": true,
					"processor": "objects.appRpcServer"
				}
			]
		},

		"objects": {
			"appRpcServer": {
				"clsid": "0xDAA32B15", // CLSID_JsonRpcServer
				"processor": "objects.application",
				"port": 5888,
				"channelMode": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": "encrypted",
						"paths": "app.config.extern.debug.rpc.serverChannelMode"
					}
				},
				"encryption": "aes"
			}
		}
	},

	///////////////////////////////////////////////////////////////////////////////////////
	//
	// Basic client logic. It's common for all client working modes
	//
	///////////////////////////////////////////////////////////////////////////////////////
	"client": {
		"baseMode": "application",
		"needElevation": true,

		"objects": {
			"appRpcClient": {
				"clsid": "0x694C9C8E", // CLSID_JsonRpcClient
				"port": 5888,
				"host": "127.0.0.1",
				"timeout": 120,
				"channelMode": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": "encrypted",
						"paths": "app.config.extern.debug.rpc.clientChannelMode"
					}
				},
				"encryption": "aes",
				"verbose": {
					"$$proxy": "cachedCmd",
					"processor": "objects.application",
					"command": "getConfigValue",
					"params": {
						"default": false,
						"paths": "app.config.extern.debug.rpc.clientVerbose"
					}
				}
			}
		}
	},

	///////////////////////////////////////////////////////////////////////////////////////
	//
	// Client working mode "install"
	//
	///////////////////////////////////////////////////////////////////////////////////////
	"install": {
		"baseMode": "uninstall",

		"script": {
			"params": {
				"startMode": "off"
			}
		},

		//
		// Installation script
		//
		"installScript": [
			{
				"description": "Installing the main Windows Service <edrsvc>",
				"command": {
					"command": "install",
					"processor": "objects.application",
					"params": {
						"startMode": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getCatalogData",
							"params": {
								"path": "app.config.script.params.startMode",
								"default": "off"
							}
						}
					}
				}
			},
			{
				"description": "Installing the Process Monitoring Library <edrpmXX.dll>",
				"command": {
					"command": "install",
					"processor": "objects.processMonitorController",
					"params": {
						"useSystemDir": true
					}
				}
			},
			{
				"description": "Installing the System Monitoring Driver <edrdrv>",
				"command": {
					"command": "install",
					"processor": "objects.systemMonitorController",
					"params": {
						"useSystemDir": true,
						"startMode": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getCatalogData",
							"params": {
								"path": "app.config.script.params.startMode",
								"default": "off"
							}
						}
					}
				}
			}
		]
	},

	///////////////////////////////////////////////////////////////////////////////////////
	//
	// Client working mode "enroll"
	//
	///////////////////////////////////////////////////////////////////////////////////////
	"enroll": {
		"baseMode": "install",

		//
		// Installation script
		//
		"enrollScript": [
			{
				"description": "Getting configuration from the EDR cloud",
				"command": {
					"command": "getConfig",
					"processor": "objects.cloudService",
					"params": {
						"triesCount": 5,
						"tryTimeout": 5000
					}
				}
			},
			{
				"description": "Getting endpoint policy",
				"command": {
					"command": "getPolicy",
					"processor": "objects.cloudService",
					"params": {
						"triesCount": 5,
						"tryTimeout": 5000
					}
				}
			},
			{
				"description": "Disable local mode",
				"command": {
					"processor": "objects.application",
					"command": "putCatalogData",
					"params": {
						"path": "app.config.extern.endpoint.isLocalMode",
						"data": false
					}
				}
			},
			{
				"description": "Serialize the local policy file",
				"command": {
					"processor": "objects.application",
					"command": "dummyUpdateLocalPolicy",
					"params": {}
				}
			},
			{
				"description": "Saving local configuration",
				"command": {
					"command": "saveCatalogData",
					"processor": "objects.application",
					"params": {
						"path": {
							"$$proxy": "cachedCmd",
							"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
							"command": "add",
							"params": {
								"args": [
									{ "$gpath": "app.dataPath" },
									"\\endpoint.cfg"
								]
							}
						},
						"dataPath": "app.config.extern.endpoint"
					}
				}
			}
		],

		//
		// Message handlers for events processing
		//
		"messageHandlers": {

			"RequestPolicyUpdate": [
				{
					"info": "Compile EVM policy",
					"subscriptionId": "evmPolicyCompilationHandler",
					"processor": {
						"clsid": "0x21C7DFD5", // CLSID_PolicyCompiler
						"config": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "loadObject",
							"params": {
								"path": {
									"$$proxy": "cachedCmd",
									"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
									"command": "add",
									"params": {
										"args": [
											{ "$gpath": "app.imagePath" },
											"\\compiler.cfg"
										]
									}
								},
								"default": {}
							}
						},
						"verbose": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getConfigValue",
							"params": {
								"paths": "app.config.policy.verbose"
							}
						}
					},
					"command": "compile",
					"constParams": true,
					"params": {
						"group": "eventsMatching",
						"data": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getConfigValue",
							"params": {
								"paths": "app.config.policy.groups.eventsMatching.source"
							}
						}
					}
				},
				{
					"info": "Compile PTM policy",
					"subscriptionId": "ptmPolicyCompilationHandler",
					"processor": {
						"clsid": "0x21C7DFD5", // CLSID_PolicyCompiler
						"config": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "loadObject",
							"params": {
								"path": {
									"$$proxy": "cachedCmd",
									"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
									"command": "add",
									"params": {
										"args": [
											{ "$gpath": "app.imagePath" },
											"\\compiler.cfg"
										]
									}
								},
								"default": {}
							}
						},
						"verbose": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getConfigValue",
							"params": {
								"paths": "app.config.policy.verbose"
							}
						}
					},
					"command": "compile",
					"constParams": true,
					"params": {
						"group": "patternsMatching",
						"data": {
							"$$proxy": "cachedCmd",
							"processor": "objects.application",
							"command": "getConfigValue",
							"params": {
								"paths": "app.config.policy.groups.patternsMatching.source"
							}
						}
					}
				}
			]
		}
	},

	///////////////////////////////////////////////////////////////////////////////////////
	//
	// Client working mode "uninstall"
	//
	///////////////////////////////////////////////////////////////////////////////////////
	"uninstall": {
		"baseMode": "client",

		//
		// Uninstallation script
		//
		"uninstallScript": [
			{
				"description": "Uninstalling the main Windows Service <edrsvc>",
				"command": {
					"command": "uninstall",
					"processor": "objects.application"
				}
			},
			{
				"description": "Uninstalling the Process Monitoring Library <edrpmXX.dll>",
				"command": {
					"command": "uninstall",
					"processor": "objects.processMonitorController"
				}
			},
			{
				"description": "Uninstalling the System Monitoring Driver <edrdrv>",
				"command": {
					"command": "uninstall",
					"processor": "objects.systemMonitorController"
				}
			},
			{
				"description": "Reporting uninstallation status to the cloud",
				"command": {
					"command": "reportUninstall",
					"processor": "objects.cloudService",
					"params": { "failSafe": true }
				}
			}

			// Uncomment this if we decide to delete something during deinstallation
			//{
			//	"description": "Deleting the source policy file",
			//	"command": {
			//		"command": "deleteFile",
			//		"processor": "objects.application",
			//		"params": {
			//			"failSafe": true,
			//			"path": {
			//				"$$proxy": "cachedCmd",
			//				"processor": { "clsid": "0x9FD7EEDA" }, // CLSID_VariantCmd
			//				"command": "add",
			//				"params": {
			//					"args": [
			//						{ "$gpath": "app.dataPath" },
			//						"\\evm.cloud.src"
			//					]
			//				}
			//			}
			//		}
			//	}
			//}
		]
	},

	///////////////////////////////////////////////////////////////////////////////////////
	//
	// Client working mode "start"
	//
	///////////////////////////////////////////////////////////////////////////////////////
	"start": {
		"baseMode": "client",
		"needElevation": true
	},

	///////////////////////////////////////////////////////////////////////////////////////
	//
	// Client working mode "stop"
	//
	///////////////////////////////////////////////////////////////////////////////////////
	"stop": {
		"baseMode": "client",
		"needElevation": true
	},

	///////////////////////////////////////////////////////////////////////////////////////
	//
	// Client working mode "restart"
	//
	///////////////////////////////////////////////////////////////////////////////////////
	"restart": {
		"baseMode": "client",
		"needElevation": true
	},

	///////////////////////////////////////////////////////////////////////////////////////
	//
	// Client working mode "dump"
	//
	///////////////////////////////////////////////////////////////////////////////////////
	"dump": {
		"baseMode": "common"
	},

	///////////////////////////////////////////////////////////////////////////////////////
	//
	// Default working mode
	//
	///////////////////////////////////////////////////////////////////////////////////////
	"default": {
		"baseMode": "service"
	}
}
